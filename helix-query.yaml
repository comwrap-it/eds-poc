version: 1

indices:
  pages:
    include:
      - '/**'
    exclude:
      - '/**.json'
    target: /query-index.json
    properties:
      lastModified:
        select: none
        value: parseTimestamp(headers["last-modified"], "ddd, DD MMM YYYY hh:mm:ss GMT")
      robots:
        select: head > meta[name="robots"]
        value: attribute(el, "content")

  nav:
    include:
      - '/**'
    exclude:
      - '/**.json'
    target: /nav-index.json
    properties:
      path:
        select: none
        value: pathname
      title:
        select: head > meta[property="og:title"], head > title
        value: |
          (() => {
            if (el && el.tagName === 'META') return attribute(el, 'content');
            if (el) return textContent(el);
            const seg = pathname.replace(/\/$/, '').split('/').pop();
            return seg || '/';
          })()
      parent:
        select: none
        value: |
          (() => {
            const p = pathname.replace(/\/$/, '');
            const i = p.lastIndexOf('/');
            return i > 0 ? p.substring(0, i) : '/';
          })()
      depth:
        select: none
        value: |
          (() => pathname.replace(/\/$/, '').split('/').filter(Boolean).length)()
